###############################################################################
#                                ASUS ROUTER                                  #
###############################################################################

# # Retrieves SNMP values from remote agents
[[inputs.snmp]]
#   ## Agent addresses to retrieve values from.
#   ##   format:  agents = ["<scheme://><hostname>:<port>"]
#   ##   scheme:  optional, either udp, udp4, udp6, tcp, tcp4, tcp6.
#   ##            default is udp
#   ##   port:    optional
#   ##   example: agents = ["udp://127.0.0.1:161"]
#   ##            agents = ["tcp://127.0.0.1:161"]
#   ##            agents = ["udp4://v4only-snmp-agent"]
   agents = ["udp://192.168.11.1:161"]

	# Timeout for each request.
    timeout = "15s"

	# SNMP version; can be 1, 2, or 3.
    version = 2

#   ## Agent host tag; the tag used to reference the source host
#   # agent_host_tag = "asus.snmp"

	# measurement name override
    name_override = "router_asus"

#   ## SNMP community string.
    community = "public"

	# Number of retries to attempt.
    retries = 3
	
	# Time between polls
	interval = "60s"

	# The GETBULK max-repetitions parameter.
    max_repetitions = 10

#     ## SNMPv3 authentication and encryption options.
#     ##
# 	# Security Name.
#     sec_name = "username"
# 	# Authentication protocol; one of "MD5", "SHA", or "".
#     auth_protocol = "SHA"
# 	# Authentication password.
#     auth_password = "password"
# 	# Security Level; one of "noAuthNoPriv", "authNoPriv", or "authPriv".
#     sec_level = "authPriv"
# #   ## Context Name.
# #   # context_name = ""
# 	# Privacy protocol used for encrypted messages; one of "DES", "AES" or "".
#     priv_protocol = "AES"
# 	# Privacy password used for encrypted messages.
#     priv_password = "password"  
   


#      fielddrop = [ "laErrorFlag", "laErrMessage" ]
#   [inputs.snmp.tagdrop]
#     diskIODevice = [ "loop*", "ram*" ]

  ###
  ### System details ###
  ###
  
   #  System name (hostname) - e.g. RT-AX86U-xxxx
   [[inputs.snmp.field]]
     name = "sysName"
     oid = "SNMPv2-MIB::sysName.0"
     is_tag = true
   
#   #  System vendor OID - e.g. ".1.3.6.1.4.1.8072.3.2.10"
#   [[inputs.snmp.field]]
#     name = "sysObjectID"
#     oid = "SNMPv2-MIB::sysObjectID.0"
   
#   #  System description - e.g. "Linux RT-AX86U-xxxx 4.1.52 #2 SMP PREEMPT Fri Feb 12 18:27:21 EST 2021 aarch64"
#   [[inputs.snmp.field]]
#     name = "sysDescr"
#     oid = "SNMPv2-MIB::sysDescr.0"
   
#   #  System contact
#   [[inputs.snmp.field]]
#     name = "sysContact"
#     oid = "SNMPv2-MIB::sysContact.0"
   
#   #  System location - e.g. "Unknown"
#   [[inputs.snmp.field]]
#     name = "sysLocation"
#     oid = "SNMPv2-MIB::sysLocation.0"
  
  
  ###
  ### Host/System Resources ###
  ###
  
  #  System uptime "The amount of time since this host was last initialized."
  #  TimeTicks /6000 for minutes.
   [[inputs.snmp.field]]
     name = "sysUpTime"
     oid = "HOST-RESOURCES-MIB::hrSystemUptime.0"

   #  Number of user sessions
   #  "The number of user sessions for which this host is
   #     storing state information.  A session is a collection
   #     of processes requiring a single act of user
   #     authentication and possibly subject to collective job
   #     control."
   [[inputs.snmp.field]]
     name = "hrSystemNumUsers"
     oid = "HOST-RESOURCES-MIB::hrSystemNumUsers.0"

#   #  Number of process contexts - did not return result based on test. 
#	#	Error: "No Such Instance currently exists at this OID"
#   [[inputs.snmp.field]]
#     name = "hrSystemProcesses"
#     oid = "HOST-RESOURCES-MIB::hrSystemProcesses.0"

   #  Device Listing
   #  Lists all the network interfaces and their statuses
   #  hrDeviceStatus values: unknown(1), running(2), warning(3), testing(4), down(5)
   [[inputs.snmp.table]]
     oid = "HOST-RESOURCES-MIB::hrDeviceTable"
     [[inputs.snmp.table.field]]
       oid = "HOST-RESOURCES-MIB::hrDeviceIndex"
       is_tag = true


#  ### Context Switches & Interrupts ###
#   #  Number of system interrupts processed
#   [[inputs.snmp.field]]
#     name = "ssRawInterrupts"
#     oid = "UCD-SNMP-MIB::ssRawInterrupts.0"
#   #  Number of context switches
#   [[inputs.snmp.field]]
#     name = "ssRawContexts"
#     oid = "UCD-SNMP-MIB::ssRawContexts.0"
  
  
  ###
  ### Host performance metrics ###
  ###
  
   #  System Load Average
   #  laLoad: "The 1,5 and 15 minute load averages (one per row)."
   #  laLoadFloat: "The 1,5 and 15 minute load averages 
   #  as an opaquely wrapped floating point number."
   #  laLoadInt: "The 1,5 and 15 minute load averages as an integer. Computed by taking 
   #  the floating point loadaverage value and multiplying by 100, 
   #  then converting the value to an integer."
   [[inputs.snmp.table]]
     oid = "UCD-SNMP-MIB::laTable"
     [[inputs.snmp.table.field]]
       oid = "UCD-SNMP-MIB::laNames"
       is_tag = true
  
  
  ### CPU inventory ###
  
   #  Processor listing
   #  hrProcessorFrwID: "The product ID of the firmware associated with the processor."
   #  hrProcessorLoad: "The average, over the last minute, of the percentage of time 
   #  that this processor was not idle. Implementations may approximate 
   #  this one minute smoothing period if necessary."
   [[inputs.snmp.table]]
#     index_as_tag = true
     oid = "HOST-RESOURCES-MIB::hrProcessorTable"
  
  
#  ### CPU utilization ### (does not seem super useful for my purposes)
#   ##  On a multi-processor system, the 'ssCpuRaw*' counters 
#   ##  are cumulative over all CPUs, so their sum will typically be N*100 (for N processors)."
#   
#   #  Number of 'ticks' spent on user-level
#   #  "The number of 'ticks' (typically 1/100s) spent processing user-level code.
#   [[inputs.snmp.field]]
#     name = "ssCpuRawUser"
#     oid = "UCD-SNMP-MIB::ssCpuRawUser.0"
#   
#   #  Number of 'ticks' spent on reduced-priority
#   #  "The number of 'ticks' (typically 1/100s) spent processing reduced-priority code.
#   #  This object will not be implemented on hosts where the underlying operating system 
#   #  does not measure this particular CPU metric."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawNice"
#     oid = "UCD-SNMP-MIB::ssCpuRawNice.0"
#   
#   #  Number of 'ticks' spent on system-level
#   #  "The number of 'ticks' (typically 1/100s) spent processing system-level code.
#   #  This object may sometimes be implemented as the combination of the 'ssCpuRawWait(54)' 
#   #  and 'ssCpuRawKernel(55)' counters, so care must be taken 
#   #  when summing the overall raw counters."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawSystem"
#     oid = "UCD-SNMP-MIB::ssCpuRawSystem.0"
#   
#   #  Number of 'ticks' spent idle
#   #  "The number of 'ticks' (typically 1/100s) spent idle."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawIdle"
#     oid = "UCD-SNMP-MIB::ssCpuRawIdle.0"
#   
#   #  Number of 'ticks' spent waiting on I/O
#   #  "The number of 'ticks' (typically 1/100s) spent waiting for IO.
#   #  This object will not be implemented on hosts where the underlying operating system 
#   #  does not measure this particular CPU metric. This time may also be included within the
#   #  'ssCpuRawSystem(52)' counter."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawWait"
#     oid = "UCD-SNMP-MIB::ssCpuRawWait.0"
#   
#   #  Number of 'ticks' spent in kernel
#   #  "The number of 'ticks' (typically 1/100s) spent processing kernel-level code.
#   #  This object will not be implemented on hosts where the underlying operating system 
#   #  does not measure this particular CPU metric. This time may also be included within the
#   #  'ssCpuRawSystem(52)' counter."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawKernel"
#     oid = "UCD-SNMP-MIB::ssCpuRawKernel.0"
#   
#   #  Number of 'ticks' spent on hardware interrupts
#   #  "The number of 'ticks' (typically 1/100s) spent processing hardware interrupts.
#   #  This object will not be implemented on hosts where the underlying operating system 
#   #  does not measure this particular CPU metric."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawInterrupt"
#     oid = "UCD-SNMP-MIB::ssCpuRawInterrupt.0"
#   
#   #  Number of 'ticks' spent on software interrupts
#   #  "The number of 'ticks' (typically 1/100s) spent processing software interrupts.
#   #  This object will not be implemented on hosts where the underlying operating system 
#   #  does not measure this particular CPU metric."
#   [[inputs.snmp.field]]
#     name = "ssCpuRawSoftIRQ"
#     oid = "UCD-SNMP-MIB::ssCpuRawSoftIRQ.0"
  

  ###
  ### SNMP Extend
  ###
  
  ### Temperatures
  
   # CPU in Celsius
   [[inputs.snmp.field]]
     name = "temp_CPU"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.116.109.112.99.1"
     conversion = "float"
	 
   # 2.4GHz Wireless module in Celsius
   [[inputs.snmp.field]]
     name = "temp_2_4_GHz"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.116.109.112.50.1"
     conversion = "float"
   
   # 5GHz Wireless module in Celsius
   [[inputs.snmp.field]]
     name = "temp_5_GHz"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.116.109.112.53.1"
     conversion = "float"
	
  
  ### Active admin sessions
     
   # Active SSH connections
   [[inputs.snmp.field]]
     name = "ssh_sessions"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.115.115.104.97.1"
     conversion = "int"
	 
   # Web admin session active time
   [[inputs.snmp.field]]
     name = "web_time"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.119.101.98.116.1"
     conversion = "int"

   # Web admin session - last logged in IP
   [[inputs.snmp.field]]
     name = "web_ip"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.119.101.98.105.1"

  
  ### Internet connection
  
  # Internet connection status
   [[inputs.snmp.field]]
     name = "internet_status"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.105.110.101.116.1"
     conversion = "int"
	 
  
  ### Partition stats
  
  # JFFS partition usage in %
   [[inputs.snmp.field]]
     name = "partition_jffs_usage"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.106.102.102.115.1"
     conversion = "int"
  
  
  ### Processes
    
   # Running process count
   [[inputs.snmp.field]]
     name = "processes_running"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.112.114.111.99.1"
     conversion = "int"
  
  
  ### Router connections
    
   # Connection count
   [[inputs.snmp.field]]
     name = "connections_total"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.99.111.110.99.1"
     conversion = "int"

   # Connections active (TCP "ESTABLISHED" and UDP "ASSURED")
   [[inputs.snmp.field]]
     name = "connections_active"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.99.111.110.97.1"
     conversion = "int"
  
  
  ### Wireless client count
    
   # Clients connected via 2.4GHz
   [[inputs.snmp.field]]
     name = "wireless_clients_2_4_GHz"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.119.50.99.108.1"
     conversion = "int"
	 
   # Clients connected via 5GHz
   [[inputs.snmp.field]]
     name = "wireless_clients_5_GHz"
     oid = ".1.3.6.1.4.1.8072.1.3.2.4.1.2.4.119.53.99.108.1"
     conversion = "int"
  
  
  ###
  ###  System Memory (physical/virtual) ###
  ### 
   
   #  Size of physical memory (RAM) in KBytes
   #  "The amount of physical read-write main memory, typically RAM, contained by the host."
   [[inputs.snmp.field]]
     name = "hrMemorySize"
     oid = "HOST-RESOURCES-MIB::hrMemorySize.0"
   
   #  Size of real/phys mem installed in KBytes
   #  "The total amount of real/physical memory installed on this host."
   [[inputs.snmp.field]]
     name = "memTotalReal"
     oid = "UCD-SNMP-MIB::memTotalReal.0"
   
   #  Size of real/phys mem unused/available in KBytes
   #  "The amount of real/physical memory currently unused or available."
   [[inputs.snmp.field]]
     name = "memAvailReal"
     oid = "UCD-SNMP-MIB::memAvailReal.0"
   
   #  Total amount of mem unused/available in KBytes
   # "The total amount of memory free or available for use on this host.  
   # This value typically covers both real memory and swap space or virtual memory."
   [[inputs.snmp.field]]
     name = "memTotalFree"
     oid = "UCD-SNMP-MIB::memTotalFree.0"
   
   #  Size of mem used as shared memory in KBytes
   [[inputs.snmp.field]]
     name = "memShared"
     oid = "UCD-SNMP-MIB::memShared.0"
   
   #  Size of mem used for buffers in KBytes
   [[inputs.snmp.field]]
     name = "memBuffer"
     oid = "UCD-SNMP-MIB::memBuffer.0"
   
   #  Size of mem used for cache in KBytes
   [[inputs.snmp.field]]
     name = "memCached"
     oid = "UCD-SNMP-MIB::memCached.0"
   
   
#   ###
#   ### Block (Disk) performance
#   ###
#   
#   #  System-wide blocks written
#   #  (Returned 0 for me. Maybe useful for USB devices? -> Remained zero with USB stick connected)
#   [[inputs.snmp.field]]
#     name = "ssIORawSent"
#     oid = "UCD-SNMP-MIB::ssIORawSent.0"
#   
#   #  Number of blocks read
#   #  (Returned 0 for me. Maybe useful for USB devices? -> Remained zero with USB stick connected)
#   [[inputs.snmp.field]]
#     name = "ssIORawReceived"
#     oid = "UCD-SNMP-MIB::ssIORawReceived.0"
#   
#   #  Per-device (disk) performance
#   #  (No diskIO entries returned. 
#   #  Maybe useful for connected USB devices?  -> No change with USB stick connected)
#   [[inputs.snmp.table]]
#     oid = "UCD-DISKIO-MIB::diskIOTable"
#     [[inputs.snmp.table.field]]
#       oid = "UCD-DISKIO-MIB::diskIODevice"
#       is_tag = true
   
   
   ###
   ### Disk/Partition/Filesystem inventory & usage
   ###
   
   #  Storage listing (all logical storage areas) 
   #  "The (conceptual) table of logical storage areas on the host.
   #     An entry shall be placed in the storage table for each
   #     logical area of storage that is allocated and has
   #     fixed resource limits.  The amount of storage
   #     represented in an entity is the amount actually usable
   #     by the requesting entity, and excludes loss due to
   #     formatting or file system reference information."
   #  hrStorageSize and hrStorageUsed in KBytes
   [[inputs.snmp.table]]
     oid = "HOST-RESOURCES-MIB::hrStorageTable"
     [[inputs.snmp.table.field]]
       oid = "HOST-RESOURCES-MIB::hrStorageDescr"
       is_tag = true
   
   
   ##
   ## Interface metrics
   ##
   # The Interfaces table contains information on the entity's interfaces.
   # Each sub-layer below the internetwork-layer of a network interface 
   # is considered to be an interface.
   
   #  Per-interface traffic, errors, drops
   [[inputs.snmp.table]]
     oid = "IF-MIB::ifTable"
     [[inputs.snmp.table.field]]
       oid = "IF-MIB::ifName"
       is_tag = true
   
   #  Per-interface high-capacity (HC) counters
   [[inputs.snmp.table]]
     oid = "IF-MIB::ifXTable"
     [[inputs.snmp.table.field]]
       oid = "IF-MIB::ifName"
       is_tag = true

   #  Decices on the network connected to the router
   #  "The IPv4 Address Translation table used for mapping from
   #         IPv4 addresses to physical addresses.
   #         This table has been deprecated, as a new IP version-neutral
   #         table has been added.  It is loosely replaced by the
   #         ipNetToPhysicalTable." (latter did not return results)
   #  ipNetToMediaType values: other(1),invalid(2),dynamic(3),static(4)
   [[inputs.snmp.table]]
     oid = "IP-MIB::ipNetToMediaTable"
   
   
#   ##
#   ## IP metrics
#   ##
#   
#   #  System-wide IP metrics
#   # (did not return results)
#   [[inputs.snmp.table]]
#     index_as_tag = true
#     oid = "IP-MIB::ipSystemStatsTable"
   
   
#   ## 
#   ## ICMP Metrics
#   ##
#   
#   #  ICMP statistics
#   #  (Counts ICMP in and out packets system-wide, including errors. 
#   #  Don't have a use case for it atm.)
#   [[inputs.snmp.table]]
#     index_as_tag = true
#     oid = "IP-MIB::icmpStatsTable"
#   #  ICMP per-type statistics
#   #  (Only counts ICMP in and out packets - don't have a use case for it atm)
#   [[inputs.snmp.table]]
#     index_as_tag = true
#     oid = "IP-MIB::icmpMsgStatsTable"
   
   
#   ##
#   ## UDP statistics
#   ##
#   #  "Discontinuities in the value of this counter can occur at 
#   #  re-initialization of the management system, and at other times 
#   #  as indicated by discontinuities in the value of sysUpTime."
#   #
#   #  (Note: not super useful atm. May consider it in the future.)
#   
#   #  Datagrams delivered to app
#   #  "The total number of UDP datagrams delivered to UDP users."
#   [[inputs.snmp.field]]
#     name = "udpInDatagrams"
#     oid = "UDP-MIB::udpInDatagrams.0"
#   
#   #  Datagrams received with no app
#   #  "The total number of received UDP datagrams for which 
#   #  there was no application at the destination port."
#   [[inputs.snmp.field]]
#     name = "udpNoPorts"
#     oid = "UDP-MIB::udpNoPorts.0"
#   
#   #  Datagrams received with error
#   #  "The number of received UDP datagrams that could not be
#   #  delivered for reasons other than the lack of an
#   #  application at the destination port."
#   [[inputs.snmp.field]]
#     name = "udpInErrors"
#     oid = "UDP-MIB::udpInErrors.0"
#   
#   #  Datagrams sent
#   #  "The total number of UDP datagrams sent from this entity."
#   [[inputs.snmp.field]]
#     name = "udpOutDatagrams"
#     oid = "UDP-MIB::udpOutDatagrams.0"
   
   
#   ##
#   ## TCP statistics
#   ##
#   #  (Note: in TCP-MIB there is also a tcpConnectionTable and a tcpListenerTable, 
#   #  for future consideration.)
#   #
#   #  (Note: not super useful atm. May consider it in the future.)
#   
#   #  Number of CLOSED -> SYN-SENT transitions
#   #  "The number of times that TCP connections have made a direct
#   #  transition to the SYN-SENT state from the CLOSED state."
#   [[inputs.snmp.field]]
#     name = "tcpActiveOpens"
#     oid = "TCP-MIB::tcpActiveOpens.0"
#   
#   #  Number of LISTEN -> SYN-RCVD transitions
#   #  "The number of times TCP connections have made a direct
#   #  transition to the SYN-RCVD state from the LISTEN state."
#   [[inputs.snmp.field]]
#     name = "tcpPassiveOpens"
#     oid = "TCP-MIB::tcpPassiveOpens.0"
#   
#   #  Number of SYN-SENT/RCVD -> CLOSED transitions
#   #  "The number of times that TCP connections have made a direct
#   #  transition to the CLOSED state from either the SYN-SENT
#   #  state or the SYN-RCVD state, plus the number of times that
#   #  TCP connections have made a direct transition to the
#   #  LISTEN state from the SYN-RCVD state."
#   [[inputs.snmp.field]]
#     name = "tcpAttemptFails"
#     oid = "TCP-MIB::tcpAttemptFails.0"
#   
#   #  Number of ESTABLISHED/CLOSE-WAIT -> CLOSED transitions
#   #  "The number of times that TCP connections have made a direct
#   #  transition to the CLOSED state from either the ESTABLISHED
#   #  state or the CLOSE-WAIT state."
#   [[inputs.snmp.field]]
#     name = "tcpEstabResets"
#     oid = "TCP-MIB::tcpEstabResets.0"
#   
#   #  Number of ESTABLISHED or CLOSE-WAIT
#   #  "The number of TCP connections for which the current state
#   #  is either ESTABLISHED or CLOSE-WAIT."
#   [[inputs.snmp.field]]
#     name = "tcpCurrEstab"
#     oid = "TCP-MIB::tcpCurrEstab.0"
#   
#  #  Number of segments received
#   #  "The total number of segments received, including those
#   #  received in error.  This count includes segments received
#   #  on currently established connections."
#   [[inputs.snmp.field]]
#     name = "tcpInSegs"
#     oid = "TCP-MIB::tcpInSegs.0"
#   
#   #  Number of segments sent
#   #  "The total number of segments sent, including those on
#   #  current connections but excluding those containing only
#   #  retransmitted octets.
#   [[inputs.snmp.field]]
#     name = "tcpOutSegs"
#     oid = "TCP-MIB::tcpOutSegs.0"
#   
#   #  Number of segments retransmitted
#   #  "The total number of segments retransmitted; that is, the
#   #   number of TCP segments transmitted containing one or more
#   #   previously transmitted octets."
#   [[inputs.snmp.field]]
#     name = "tcpRetransSegs"
#     oid = "TCP-MIB::tcpRetransSegs.0"
#   
#   #  Number of segments received with error
#   #  "The total number of segments received in error (e.g., bad
#   #   TCP checksums)."
#   [[inputs.snmp.field]]
#     name = "tcpInErrs"
#     oid = "TCP-MIB::tcpInErrs.0"
#   
#   #  Number of segments sent w/RST
#   #  "The number of TCP segments sent containing the RST flag."
#   [[inputs.snmp.field]]
#     name = "tcpOutRsts"
#     oid = "TCP-MIB::tcpOutRsts.0"
   
   
#   ##
#   ## IP routing statistics
#   ##
#   #  (did not return results)
#   
#   #  Number of valid routing entries
#   [[inputs.snmp.field]]
#     name = "inetCidrRouteNumber"
#     oid = "IP-FORWARD-MIB::inetCidrRouteNumber.0"
#   #  Number of valid entries discarded
#   [[inputs.snmp.field]]
#     name = "inetCidrRouteDiscards"
#     oid = "IP-FORWARD-MIB::inetCidrRouteDiscards.0"
#   #  Number of valid forwarding entries
#   [[inputs.snmp.field]]
#     name = "ipForwardNumber"
#     oid = "IP-FORWARD-MIB::ipForwardNumber.0"
   
   
#   ##
#   ## IP routing statistics
#   ##
#   #  (Note: not super useful atm. May consider it in the future.)
#   
#   #  Number of valid routes discarded
#   #  "The number of routing entries which were chosen
#   #  to be discarded even though they are valid. 
#   #  One possible reason for discarding such an entry could be 
#   #  to free-up buffer space for other routing entries."
#   [[inputs.snmp.field]]
#     name = "ipRoutingDiscards"
#     oid = "RFC1213-MIB::ipRoutingDiscards.0"
   
   
#   ##
#   ## SNMP metrics
#   ##
#   #  Number of SNMP messages received
#   [[inputs.snmp.field]]
#     name = "snmpInPkts"
#     oid = "SNMPv2-MIB::snmpInPkts.0"
#   #  Number of SNMP Get-Request received
#   [[inputs.snmp.field]]
#     name = "snmpInGetRequests"
#     oid = "SNMPv2-MIB::snmpInGetRequests.0"
#   #  Number of SNMP Get-Next received
#   [[inputs.snmp.field]]
#     name = "snmpInGetNexts"
#     oid = "SNMPv2-MIB::snmpInGetNexts.0"
#   #  Number of SNMP objects requested
#   [[inputs.snmp.field]]
#     name = "snmpInTotalReqVars"
#     oid = "SNMPv2-MIB::snmpInTotalReqVars.0"
#   #  Number of SNMP Get-Response received
#   [[inputs.snmp.field]]
#     name = "snmpInGetResponses"
#     oid = "SNMPv2-MIB::snmpInGetResponses.0"
#   #  Number of SNMP messages sent
#   [[inputs.snmp.field]]
#     name = "snmpOutPkts"
#     oid = "SNMPv2-MIB::snmpOutPkts.0"
#   #  Number of SNMP Get-Request sent
#   [[inputs.snmp.field]]
#     name = "snmpOutGetRequests"
#     oid = "SNMPv2-MIB::snmpOutGetRequests.0"
#   #  Number of SNMP Get-Next sent
#   [[inputs.snmp.field]]
#     name = "snmpOutGetNexts"
#     oid = "SNMPv2-MIB::snmpOutGetNexts.0"
#   #  Number of SNMP Get-Response sent
#   [[inputs.snmp.field]]
#     name = "snmpOutGetResponses"
#     oid = "SNMPv2-MIB::snmpOutGetResponses.0"